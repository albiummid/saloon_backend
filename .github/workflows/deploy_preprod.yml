name: PREPROD - Deploy image to container registry

env:
  DB_USER: root
  DB_USERNAME: root
  DB_PASSWORD: root
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  DB_DATABASE: babacoiffure_db
  STRIPE_KEY: ${{ secrets.STRIPE_KEY }}
  JWT_SECRET: KC6UyRtBW0Xm5yz4GMuWUwCY0hnTIA0NzwQBljqR2hyltM8d4O
  ENV_TYPE: DEV
  MINIO_USE_SSL: true

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #
  #     - name: Start MySQL in Docker
  #       run: |
  #         docker run --name mysql -e MYSQL_ROOT_PASSWORD=${{ env.DB_PASSWORD }} -e MYSQL_DATABASE=${{ env.DB_DATABASE }} -p 3306:3306 -d mysql:8
  #
  #     - name: Wait for MySQL to be ready
  #       run: |
  #         for i in {1..60}; do
  #           if docker exec mysql mysqladmin ping -h127.0.0.1 -P3306 -uroot -p${{ env.DB_PASSWORD }} --silent; then
  #             echo "MySQL is ready!"
  #             break
  #           fi
  #           echo "Waiting for MySQL to be ready... Attempt $i"
  #           sleep 10
  #         done
  #
  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.23
  #
  #     - name: Cache Go modules
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cache/go-build
  #           ~/go/pkg/mod
  #         key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
  #         restore-keys: |
  #           ${{ runner.os }}-go-
  #
  #     - name: Test
  #       run: go test -count=1 -v ./...
  #
  #     - name: Cleanup MySQL
  #       run: |
  #         docker stop mysql
  #         docker rm mysql

  deploy:
    # needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Extract name and version
        run: |
          echo "REPO_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)" >> $GITHUB_ENV
          echo "VERSION=$(echo preprod)" >> $GITHUB_ENV
      - name: connect to docker
        run: docker login ${{ secrets.CONTAINER_REGISTERY }} -u nologin --password-stdin <<< ${{ secrets.REGISTERY_API_KEY }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.CONTAINER_REGISTERY }}/backend_v2:preprod
          platforms: linux/amd64

  update:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Use CLI
        uses: scaleway/action-scw@v0
        id: cli
        with:
          save-config: true
          export-config: true
          version: v2.13.0
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          default-project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          default-organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
          args: container container deploy ${{ secrets.SERVERLESS_ID }}
